package com.jpmac26.olddays;

import com.jpmac26.olddays.entity.enderman.RenderODEndermanFactory;
import net.minecraft.entity.monster.EntityEnderman;
import net.minecraft.launchwrapper.Launch;
import net.minecraftforge.fml.common.event.*;
import com.jpmac26.olddays.entity.EntityODEnderman;
import com.jpmac26.olddays.entity.EntityODSheep;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.client.registry.RenderingRegistry;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.relauncher.Side;

import static net.minecraftforge.fml.common.registry.EntityRegistry.registerModEntity;

import java.io.File;
import java.util.Arrays;

import net.minecraftforge.fml.relauncher.SideOnly;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * Created by James Pelster on 7/11/2016.
 */
@Mod(modid = "olddays", name = "Old Days Revisited", version = "0.1.1", acceptedMinecraftVersions = "1.10.2")
public class OldDaysRevisited
{
    @Mod.Instance
    public static OldDaysRevisited instance;
    public static final String MODID = "olddays";
    public static final String VERSION = "0.1.1";
    public static Logger LOGGER = LogManager.getLogger("OldDaysRevisited");
    public static boolean isSrg = !(boolean) Launch.blackboard.get("fml.deobfuscatedEnvironment");
    protected KeyHandler keyHandler;
    protected GuiHandler guiHandler;
    protected ODEventHandler eventHandler;
    
    
    @EventHandler
    public void preInit(FMLPreInitializationEvent event) {
        RenderingRegistry.registerEntityRenderingHandler(EntityEnderman.class, RenderODEndermanFactory.INSTANCE);
        //RenderingRegistry.registerEntityRenderingHandler(EntityODEnderman.class, RenderODEndermanFactory.INSTANCE);

        eventHandler = new ODEventHandler();
        MinecraftForge.EVENT_BUS.register(eventHandler);

		ModMetadata mMetadata = event.getModMetadata();
		mMetadata.credits = "CaptainSwag101, Kodehawa, Exalm";
		mMetadata.description = "Bringing back old Minecraft experiences, one version at a time.";
		mMetadata.autogenerated = false;
		mMetadata.version = VERSION;
		mMetadata.authorList = Arrays.asList(new String[] { "CaptainSwag101", "Kodehawa"});
		mMetadata.url = "https://www.github.com/jpmac26/OldDaysRevisited";
    }
    
    @EventHandler
    public void init(FMLInitializationEvent event) {
        //register custom entity
        int id = 0;
        registerModEntity(EntityODEnderman.class, "Enderman", id++, this, 64, 3, true);
        registerModEntity(EntityODSheep.class, "Sheep", id++, this, 64, 3, true);
    }

    @SideOnly(Side.CLIENT)
    @EventHandler
    public void clientInit(FMLInitializationEvent event) {
        guiHandler = new GuiHandler();
        NetworkRegistry.INSTANCE.registerGuiHandler(this, guiHandler);
        MinecraftForge.EVENT_BUS.register(guiHandler);

        keyHandler = new KeyHandler();
        MinecraftForge.EVENT_BUS.register(keyHandler);
    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event)
    {
		LOGGER.info("OldDaysRevisited " + VERSION + " started successfully.");
    }

    @EventHandler
    public void getWorldConfig(FMLServerStartingEvent event)
    {
        String configPath = event.getServer().getFolderName();
        if (event.getServer().isSinglePlayer())
            configPath = "saves/" + configPath;

        File configFile = new File(configPath, MODID + ".cfg");
        if (configFile.exists())
            LOGGER.info("Loading config file for world at " + configFile.getPath());
        else
            LOGGER.info("Config file does not exist for this world, creating one at " + configFile.getPath());

        ConfigHandler.init(configFile);
    }

    @EventHandler
    public void saveWorldConfig(FMLServerStoppingEvent event)
    {
        LOGGER.info("Saving config file to " + ConfigHandler.config.getConfigFile().getPath());
        ConfigHandler.save();
    }
}
